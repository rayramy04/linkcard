export default class ShareManager{constructor(t){this.config=t,this.shareButton=null,this.toastTimer=null}init(){this.setupElements(),this.attachEventListeners()}setupElements(){this.shareButton=document.querySelector("button#shareButton")}attachEventListeners(){this.shareButton&&this.shareButton.addEventListener("click",()=>{this.handleShare()})}async handleShare(){const t={title:`${this.config.profile.name} - ${this.config.profile.title}`,text:`Check out ${this.config.profile.name}'s profile!`,url:window.location.href};if(navigator.share)try{await navigator.share(t),await this.copyToClipboard(t.url,"Shared and link copied!")}catch(e){"AbortError"===e.name||console.log("Share failed:",e),await this.copyToClipboard(t.url,"Link copied to clipboard!")}else await this.copyToClipboard(t.url,"Link copied to clipboard!")}async copyToClipboard(t,e="Link copied to clipboard!"){try{await navigator.clipboard.writeText(t),this.showToast(e)}catch(o){console.error("Failed to copy:",o),this.fallbackCopy(t,e)}}fallbackCopy(t,e="Link copied to clipboard!"){const o=document.createElement("textarea");o.value=t,o.style.position="fixed",o.style.opacity="0",document.body.appendChild(o),o.select();try{document.execCommand("copy"),this.showToast(e)}catch(t){console.error("Fallback copy failed:",t),this.showToast("Failed to copy link")}document.body.removeChild(o)}showToast(t){const e=document.getElementById("toast"),o=document.getElementById("toast-message");e&&o&&(o.textContent=t,e.removeAttribute("hidden"),this.toastTimer&&clearTimeout(this.toastTimer),this.toastTimer=setTimeout(()=>{e.setAttribute("hidden","")},3e3))}}